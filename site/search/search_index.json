{
    "docs": [
        {
            "location": "/", 
            "text": "Highlights\n\n\n\n\nEfficient data structure to handle geological models\n\n\nAbstract mesh classes to represent the geological model entities\n\n\nResponsive API to use meshes in physical simulators\n\n\nLightweight geological model viewer\n\n\nUtilities to convert geological models into different file format\n\n\n\n\nMore details available in the features section.\n\n\n\n\n\n\nDownload\n\n\n\n\nRINGMesh_v5.0.0.zip\n\n\n\n\nFor older releases see the \ndownload\n section.\n\n\nNews\n\n\n\n\n\n\n\n\nDate\n\n\nMessage\n\n\n\n\n\n\n\n\n\n\nNov 20, 2017\n\n\nNew RINGMesh website !", 
            "title": "_Home"
        }, 
        {
            "location": "/#highlights", 
            "text": "Efficient data structure to handle geological models  Abstract mesh classes to represent the geological model entities  Responsive API to use meshes in physical simulators  Lightweight geological model viewer  Utilities to convert geological models into different file format   More details available in the features section.", 
            "title": "Highlights"
        }, 
        {
            "location": "/#download", 
            "text": "RINGMesh_v5.0.0.zip   For older releases see the  download  section.", 
            "title": "Download"
        }, 
        {
            "location": "/#news", 
            "text": "Date  Message      Nov 20, 2017  New RINGMesh website !", 
            "title": "News"
        }, 
        {
            "location": "/try/try_online/", 
            "text": "GeoModel Viewer\n\n\nDescription\n\n\nGeoModel Converter\n\n\nDescription", 
            "title": "Try online"
        }, 
        {
            "location": "/try/try_online/#geomodel-viewer", 
            "text": "Description", 
            "title": "GeoModel Viewer"
        }, 
        {
            "location": "/try/try_online/#geomodel-converter", 
            "text": "Description", 
            "title": "GeoModel Converter"
        }, 
        {
            "location": "/try/installation/", 
            "text": "Configuration and compilation\n\n\nRINGMesh is tested under Linux (64 bits) and Windows (64 bits).\nYou will need CMake (version \n= 3.1). There is no other dependency (everything\nyou need is shipped with RINGMesh). Follow the Linux, Mac OS or Windows instructions below.\n\n\nTo clone RINGMesh you need Git (https://git-scm.com/).\nMake sure that Git binary directory is in your computer path (environment variable).\nUnder Windows, after installing Git you should have in your path environment variable:\nC:\\Program Files\\Git\\cmd.\nWarning: TortoiseGit (https://tortoisegit.org/) does not install Git.\n\n\nYou can clone RINGMesh using:\n\n\ngit clone https://github.com/ringmesh/RINGMesh/\n\n\n\n\nLinux\n\n\nConfiguring RINGMesh\n\n\nExecute cmake command in a RINGMesh/build directory.\n\n\nmkdir build\ncd build\n\n\n\n\nTo configure using default options:\n\n\ncmake ..\n\n\n\n\nTo define the options, use the cmake interface\n\n\ncmake-gui .. or ccmake ..\n\n\n\n\nCompiling RINGMesh\n\n\nTo compile you need the following packages (on Debian-based linux):\n\n\n\n\nbuild-essential\n\n\nlibx11-dev\n\n\nlibxrandr-dev\n\n\nlibxinerama-dev\n\n\nlibxcursor-dev\n\n\nfreeglut3-dev\n\n\nlibxi-dev\n\n\n\n\nNote: you need gcc/g++ version higher or equal to 4.8 to compile RINGMesh.\n\n\nThen, to compile RINGMesh, go to RINGMesh root directory and:\n\n\ncd build/Release\nmake\n\n\n\n\nTo build in debug, go to build/Debug instead.\n\n\nCompiling the documentation\n\n\nTo be able to compile the documentation, you have to set the cmake flag \nBUILD_DOCUMENTATION\n\nto on when configuring the project:\n\n\ncd build\ncmake .. -DBUILD_DOCUMENTATION:bool=on\ncd build Release\nmake doc-devkit\n\n\n\n\nTroubleshooting\n\n\nIf you get this error during geogram gfx compilation (occured for Ubuntu 17.04):\n\n\nNo rule to make target '/usr/lib/x86_64-linux-gnu/libGL.so'\n\n\n\n\nyou can try under root:\n\n\nrm /usr/lib/x86_64-linux-gnu/libGL.so\nln -s /usr/lib/libGL.so.1 /usr/lib/x86_64-linux-gnu/libGL.so\n\n\n\n\nAdditionnal information\n\n\nEclipse-cdt project\n\n\nEclipse-cdt\n\nproject is provided (.project and .cproject). You can import RINGMesh into\nEclipse: File\nImport...\nGeneral\nExisting Projects into Workspace.\n\n\nWindows\n\n\nConfiguring RINGMesh\n\n\nLaunch CMake GUI, indicate where is the source code as the path to RINGMesh root and\nwhere to put the binaries as this_root/build/ringmesh.\nConfiguration options can be set in using the interface.\n\n\nRINGMesh has previously been compiled with:\n\n\n\n\nVisual Studio 10 2010 Win64\n\n\nVisual Studio 11 2012 Win64\n\n\nVisual Studio 12 2013 Win64\n\n\nVisual Studio 14 2015 Win64\n\n\nVisual Studio 15 2017 Win64\n\n\n\n\nCompiling RINGMesh\n\n\nMake sure that you have installed C++ package for VisualStudio through the VisualStudio installer.\nYou can either launch building in VisualStudio or calling cmake in command line\nin the build directory created at the configuration step:\n\n\ncmake --build . --config Release\ncmake --build . --config Debug\ncmake --build . --config RelWithDebInfo\n\n\n\n\nThe available compilation modes are:\n\n\n\n\nRelease\n\n\nDebug\n\n\nRelWithDebInfo (mandatory to debug a Gocad plugin in Debug mode with a Gocad\n  in Release, there are issues between libraries in Debug linked to a Gocad plugin)\n\n\n\n\nCompiling the documentation\n\n\n\n\nCheck the BUILD_DOCUMENTATION option when using cmake\n\n\nOpen the solution which is in build/ringmesh/RINGmesh.sln in VisualStudio\n\n\nBuild the doc-devkit or the doc-devkit-lite project\n\n\n\n\nSee the documentation section for more details.\n\n\nMac OS\n\n\nConfiguring RINGMesh\n\n\nUsing clang (without Xcode)\n\n\nAs in Linux.\n\n\nUsing Xcode IDE\n\n\nAs in Windows but with the Xcode generator\n(use \"-G Xcode\" if you use cmake in command lines).\n\n\nCompiling RINGMesh\n\n\nYou need to install the Mac OS \"Command Line Developer Tools\".\n\n\nNote: you need gcc/g++ version higher or equal to 4.2 to compile RINGMesh.\nIn Mac OS, clang is used.\n\n\nUsing clang (without Xcode)\n\n\nAs in Linux except for the packages.\n\n\nUsing Xcode IDE\n\n\nYou need to install Xcode IDE.\nOpen the build/ringmesh/RINGMesh.xcodeproj with Xcode IDE,\nand then compile (as in Windows with VisualStudio).\nOr use these command lines:\n\n\ncd build/ringmesh\nxcodebuild -project RINGMesh.xcodeproj -alltargets -configuration Release\n\n\n\n\nTo build in Debug, replace \"Release\" by \"Debug\" after \"-configuration\".", 
            "title": "Installation"
        }, 
        {
            "location": "/try/installation/#configuration-and-compilation", 
            "text": "RINGMesh is tested under Linux (64 bits) and Windows (64 bits).\nYou will need CMake (version  = 3.1). There is no other dependency (everything\nyou need is shipped with RINGMesh). Follow the Linux, Mac OS or Windows instructions below.  To clone RINGMesh you need Git (https://git-scm.com/).\nMake sure that Git binary directory is in your computer path (environment variable).\nUnder Windows, after installing Git you should have in your path environment variable:\nC:\\Program Files\\Git\\cmd.\nWarning: TortoiseGit (https://tortoisegit.org/) does not install Git.  You can clone RINGMesh using:  git clone https://github.com/ringmesh/RINGMesh/", 
            "title": "Configuration and compilation"
        }, 
        {
            "location": "/try/installation/#linux", 
            "text": "", 
            "title": "Linux"
        }, 
        {
            "location": "/try/installation/#configuring-ringmesh", 
            "text": "Execute cmake command in a RINGMesh/build directory.  mkdir build\ncd build  To configure using default options:  cmake ..  To define the options, use the cmake interface  cmake-gui .. or ccmake ..", 
            "title": "Configuring RINGMesh"
        }, 
        {
            "location": "/try/installation/#compiling-ringmesh", 
            "text": "To compile you need the following packages (on Debian-based linux):   build-essential  libx11-dev  libxrandr-dev  libxinerama-dev  libxcursor-dev  freeglut3-dev  libxi-dev   Note: you need gcc/g++ version higher or equal to 4.8 to compile RINGMesh.  Then, to compile RINGMesh, go to RINGMesh root directory and:  cd build/Release\nmake  To build in debug, go to build/Debug instead.", 
            "title": "Compiling RINGMesh"
        }, 
        {
            "location": "/try/installation/#compiling-the-documentation", 
            "text": "To be able to compile the documentation, you have to set the cmake flag  BUILD_DOCUMENTATION \nto on when configuring the project:  cd build\ncmake .. -DBUILD_DOCUMENTATION:bool=on\ncd build Release\nmake doc-devkit", 
            "title": "Compiling the documentation"
        }, 
        {
            "location": "/try/installation/#troubleshooting", 
            "text": "If you get this error during geogram gfx compilation (occured for Ubuntu 17.04):  No rule to make target '/usr/lib/x86_64-linux-gnu/libGL.so'  you can try under root:  rm /usr/lib/x86_64-linux-gnu/libGL.so\nln -s /usr/lib/libGL.so.1 /usr/lib/x86_64-linux-gnu/libGL.so", 
            "title": "Troubleshooting"
        }, 
        {
            "location": "/try/installation/#additionnal-information", 
            "text": "", 
            "title": "Additionnal information"
        }, 
        {
            "location": "/try/installation/#eclipse-cdt-project", 
            "text": "Eclipse-cdt \nproject is provided (.project and .cproject). You can import RINGMesh into\nEclipse: File Import... General Existing Projects into Workspace.", 
            "title": "Eclipse-cdt project"
        }, 
        {
            "location": "/try/installation/#windows", 
            "text": "", 
            "title": "Windows"
        }, 
        {
            "location": "/try/installation/#configuring-ringmesh_1", 
            "text": "Launch CMake GUI, indicate where is the source code as the path to RINGMesh root and\nwhere to put the binaries as this_root/build/ringmesh.\nConfiguration options can be set in using the interface.  RINGMesh has previously been compiled with:   Visual Studio 10 2010 Win64  Visual Studio 11 2012 Win64  Visual Studio 12 2013 Win64  Visual Studio 14 2015 Win64  Visual Studio 15 2017 Win64", 
            "title": "Configuring RINGMesh"
        }, 
        {
            "location": "/try/installation/#compiling-ringmesh_1", 
            "text": "Make sure that you have installed C++ package for VisualStudio through the VisualStudio installer.\nYou can either launch building in VisualStudio or calling cmake in command line\nin the build directory created at the configuration step:  cmake --build . --config Release\ncmake --build . --config Debug\ncmake --build . --config RelWithDebInfo  The available compilation modes are:   Release  Debug  RelWithDebInfo (mandatory to debug a Gocad plugin in Debug mode with a Gocad\n  in Release, there are issues between libraries in Debug linked to a Gocad plugin)", 
            "title": "Compiling RINGMesh"
        }, 
        {
            "location": "/try/installation/#compiling-the-documentation_1", 
            "text": "Check the BUILD_DOCUMENTATION option when using cmake  Open the solution which is in build/ringmesh/RINGmesh.sln in VisualStudio  Build the doc-devkit or the doc-devkit-lite project   See the documentation section for more details.", 
            "title": "Compiling the documentation"
        }, 
        {
            "location": "/try/installation/#mac-os", 
            "text": "", 
            "title": "Mac OS"
        }, 
        {
            "location": "/try/installation/#configuring-ringmesh_2", 
            "text": "", 
            "title": "Configuring RINGMesh"
        }, 
        {
            "location": "/try/installation/#using-clang-without-xcode", 
            "text": "As in Linux.", 
            "title": "Using clang (without Xcode)"
        }, 
        {
            "location": "/try/installation/#using-xcode-ide", 
            "text": "As in Windows but with the Xcode generator\n(use \"-G Xcode\" if you use cmake in command lines).", 
            "title": "Using Xcode IDE"
        }, 
        {
            "location": "/try/installation/#compiling-ringmesh_2", 
            "text": "You need to install the Mac OS \"Command Line Developer Tools\".  Note: you need gcc/g++ version higher or equal to 4.2 to compile RINGMesh.\nIn Mac OS, clang is used.", 
            "title": "Compiling RINGMesh"
        }, 
        {
            "location": "/try/installation/#using-clang-without-xcode_1", 
            "text": "As in Linux except for the packages.", 
            "title": "Using clang (without Xcode)"
        }, 
        {
            "location": "/try/installation/#using-xcode-ide_1", 
            "text": "You need to install Xcode IDE.\nOpen the build/ringmesh/RINGMesh.xcodeproj with Xcode IDE,\nand then compile (as in Windows with VisualStudio).\nOr use these command lines:  cd build/ringmesh\nxcodebuild -project RINGMesh.xcodeproj -alltargets -configuration Release  To build in Debug, replace \"Release\" by \"Debug\" after \"-configuration\".", 
            "title": "Using Xcode IDE"
        }, 
        {
            "location": "/try/documentation/", 
            "text": "", 
            "title": "Doxygen documentation"
        }, 
        {
            "location": "/try/tutorials/", 
            "text": "GeoModel Basics", 
            "title": "Tutorials"
        }, 
        {
            "location": "/try/tutorials/geomodel/geomodel-basics/", 
            "text": "How to build and use GeoModel\n\n\nGeoModelBuilder\n\n\nThe \nRINGMesh::GeoModelBuilder\n implements functions to build and modify the elements of a \nRINGMesh::GeoModel\n.\nAny new builder should derive from this class.\nThree main builders are implemented:\n\n\n\n\nRINGMesh::GeoModelBuilderGM to load RINGMesh geological model format\n  (boundary representation or 3D meshed models).\n\n\nRINGMesh::GeoModelBuilderGocad to load either:\n\n\nA SKUA-GOCAD structural model saved in a .ml (RINGMesh::GeoModelBuilderML) file.\n\n\nA volumetric model saved in a .so (RINGMesh::GeoModelBuilderTSolid) file.\n\n\n\n\n\n\nRINGMesh::GeoModelBuilderSurfaceMesh and RINGMesh::GeoModelBuilderMesh to build a\nRINGMesh::GeoModel from a RINGMesh::Mesh.\n\n\n\n\nGeoModelMesh: How to use the global iteration?\n\n\n// Iterates on the RINGMesh::GeoModelMesh (gmm) vertices without redundancy\nfor( index_t v = 0; v \n gmm.vertices.nb_vertices(); v++ ) {\n    const vec3\n point = gmm.vertices.vertex( v ) ;\n}\n\n// Iterates on the RINGMesh::GeoModelMesh (gmm) facets without redundancy\nfor( index_t s = 0; s \n gmm.model().nb_surfaces(); s++ ) {\n    // Each surface can be stored twice if it is at the interface of two meshes\n    for( index_t f = 0; f \n gmm.facets.nb_facets( s ); f++ ) { // It is also possible to iterate only on triangle or quad\n        index_t facet_id_in_the_mesh = gmm.facets.facet( s, f ) ;\n        std::cout \n \"Nb vertices in the facets: \" \n gmm.facets.nb_vertices( facet_id_in_the_mesh ) \n std::endl ;\n    }\n}\n\n// Iterates on the RINGMesh::GeoModelMesh (gmm) cells and its adjacent cells\nfor( index_t m = 0; m \n gmm.model().nb_regions(); m++ ) {\n    for( index_t c = 0; c \n gmm.cells.nb_cells( m ); c++ ) { // It is also possible to iterate only on one element type\n        index_t cell_in_gmm = gmm.cells.cell( m, c ) ;\n        for( index_t f = 0; f \n gmm.cells.nb_facets( cell_in_gmm ); f++ ) {\n            index_t global_c_adj = gmm.cells.adjacent( cell_in_gmm, f ) ; // Global cell adjacent index\n            if( global_c_adj == GEO::NO_CELL ) {\n                // The cell is on the border\n                ...\n            } else {\n                ...\n            }\n        } \n    }\n}", 
            "title": "_Geomodel Basics"
        }, 
        {
            "location": "/try/tutorials/geomodel/geomodel-basics/#how-to-build-and-use-geomodel", 
            "text": "", 
            "title": "How to build and use GeoModel"
        }, 
        {
            "location": "/try/tutorials/geomodel/geomodel-basics/#geomodelbuilder", 
            "text": "The  RINGMesh::GeoModelBuilder  implements functions to build and modify the elements of a  RINGMesh::GeoModel .\nAny new builder should derive from this class.\nThree main builders are implemented:   RINGMesh::GeoModelBuilderGM to load RINGMesh geological model format\n  (boundary representation or 3D meshed models).  RINGMesh::GeoModelBuilderGocad to load either:  A SKUA-GOCAD structural model saved in a .ml (RINGMesh::GeoModelBuilderML) file.  A volumetric model saved in a .so (RINGMesh::GeoModelBuilderTSolid) file.    RINGMesh::GeoModelBuilderSurfaceMesh and RINGMesh::GeoModelBuilderMesh to build a\nRINGMesh::GeoModel from a RINGMesh::Mesh.", 
            "title": "GeoModelBuilder"
        }, 
        {
            "location": "/try/tutorials/geomodel/geomodel-basics/#geomodelmesh-how-to-use-the-global-iteration", 
            "text": "// Iterates on the RINGMesh::GeoModelMesh (gmm) vertices without redundancy\nfor( index_t v = 0; v   gmm.vertices.nb_vertices(); v++ ) {\n    const vec3  point = gmm.vertices.vertex( v ) ;\n}\n\n// Iterates on the RINGMesh::GeoModelMesh (gmm) facets without redundancy\nfor( index_t s = 0; s   gmm.model().nb_surfaces(); s++ ) {\n    // Each surface can be stored twice if it is at the interface of two meshes\n    for( index_t f = 0; f   gmm.facets.nb_facets( s ); f++ ) { // It is also possible to iterate only on triangle or quad\n        index_t facet_id_in_the_mesh = gmm.facets.facet( s, f ) ;\n        std::cout   \"Nb vertices in the facets: \"   gmm.facets.nb_vertices( facet_id_in_the_mesh )   std::endl ;\n    }\n}\n\n// Iterates on the RINGMesh::GeoModelMesh (gmm) cells and its adjacent cells\nfor( index_t m = 0; m   gmm.model().nb_regions(); m++ ) {\n    for( index_t c = 0; c   gmm.cells.nb_cells( m ); c++ ) { // It is also possible to iterate only on one element type\n        index_t cell_in_gmm = gmm.cells.cell( m, c ) ;\n        for( index_t f = 0; f   gmm.cells.nb_facets( cell_in_gmm ); f++ ) {\n            index_t global_c_adj = gmm.cells.adjacent( cell_in_gmm, f ) ; // Global cell adjacent index\n            if( global_c_adj == GEO::NO_CELL ) {\n                // The cell is on the border\n                ...\n            } else {\n                ...\n            }\n        } \n    }\n}", 
            "title": "GeoModelMesh: How to use the global iteration?"
        }, 
        {
            "location": "/features/geomodel/", 
            "text": "GeoModel: Mutable object composition to represent Geological Model\n\n\nThe key feature of RINGMesh is the \nRINGMesh::GeoModel\n. It aims at representing a geological model \nwith a level of complexity adapted to the prolem to solve. Geological objects are complex and \nmultiscale.\n\n\n\n\nThe first way to represent and discretize a high level of detail is to use a mesh composition \nof Entities called \nRINGMesh::GeoModelEntities\n. In this cas, the \nRINGMesh::GeoModel\n defines the\nboundary representation of major geological objects holding the discretization and connectivity \nbetween Entities.\n\n\nThe second way to deal with the geological model is to consisder the global geometry through a \nsingle mesh. The \nRINGMesh::GeoModel\n have tha ability to build a \nRINGMesh::GeoModelMesh\n on the fly.\nIn this object, every nodes, edges, polygones and cells can be assessed though \na global index. It also enable a duplication of nodes along surfaces. This is usefull\nto feed some physical simulator and export several data structure format.\n\n\n\n\nGeoModel Constitutive Elements: GeoModelEntity\n\n\nA model is defined by its constitutive elements \nRINGMesh::GeoModelEntity\n. \nThere is two main king of entities:\n\n\n\n\nGeometrical entities that define the geometry of the model throught several dimensions:\n\n\nRegions \n\n\nSurfaces\n\n\nLines\n\n\nCorners\n\n\n\n\n\n\nGeological entities that group several geometrical entities according to their geological meaning:\n\n\nLayers \n\n\nInterfaces\n\n\nContacts\n\n\n\n\n\n\n\n\n\n\nWe know that this is not an exhautive list. A lot of entities would be valuable to complete the model. \nWe strongly encourage people to contribute and complete these lists :)  \n\n\nGeoModel Geometrical Entities: GeoModelMeshEntity\n\n\nA set of \nRINGMesh::GeoModelMeshEntity\n hold the discretization and the boundary representation of the \ngeological model. Each mesh entity knows all connected higher and lower dimension mesh entities. Even if\nthe topology between Entities is known, each \nRINGMesh::GeoModelMeshEntity\n store its own mesh data \nstructure independently from one to another and you can't get any global information. Geometrical \ninformation is contained by an abstract mesh class implemented in RINGMesh. This abstraction level is \na strength of RINGMesh because it can be adapted to any data structure and ease the coupling between \nsoftware (\nmore details about meshes\n).\n\n\n\n\nA \nRINGMesh::Region\n is a volume defined by a set of \nRingMesh::Surface\n creating a closed \"box\". \nEvery surfaces that bound a region can be accessed by its index. A region can be meshed with cells.\n\n\nA \nRINGMesh::Surface\n is defined by a set of \nRINGMesh::Line\n creating a closed curve. It defines \none border of a \nRINGMesh::Region\n. Neighboring lines and surfaces can be accessed by their indices.\n\n\nA \nRINGMesh::Line\n is defined by two \nRINGMesh::corner\n. Connected corner and surfaces can be \naccessed by their indices.\n\n\nA \nRINGMesh::Corner\n is a single node that bound \nRingMesh::Line\n. Connected lines can be \naccessed by their indices.\n\n\n\n\nGeoModel Geological Entities: GeoModelGeologicalEntity\n\n\nA \nRINGMesh::GeoModelGeologicalEntity\n store a geological based topological structure. It use a kind\nof parent/child implementation where \nRINGMesh::GeoModelGeologicalEntity\n is the parent of its children\n\nRINGMesh::GeoModelMeshEntity\n. The main idea is to cluster several geometrical entity that composed a \ngeological object.\n\n\n\n\nRINGMesh::Layer\n is composed by several RINGMesh::Region. A layer is the parent of several children \n regions. It represents a geological layer.\n\n\nRINGMesh::Interface\n is composed by several RINGMesh::Surface. An interface is tha parent of several\n children surfaces. It represents a geological objects such as faults or horizons.\n\n\nA \nRINGMesh::Contact\n (parent) is composed by several RINGMesh::Line (children). It corresponds to the\n intersections between two \nRINGMesh::Interface\n.\n\n\n\n\nGeoModel Global Representation: GeoModelMesh\n\n\nThe GeoModelMesh is one mesh built by copying and merging all \nRINGMesh::GeoModelMeshEntity\n of the GeoModel \nin a global and unique mesh. It allows to access to (1) a more general information than the one stores inside \nmesh of \nRINGMesh::GeoModelEntity\n, and (2) a single mesh representing the entire geological model.\n\n\nTo ease the global access to vertices, edges, facets and cells without redundancy at GeoModel geometrical\nentity borders; four databases are available. These databases are empty by default and are automatically \nfilled as soon as they are used.\n\n\n\n\nThe \nRINGMesh::GeoModelMeshVertices\n \n\n\nThe \nRINGMesh::GeoModelMeshEdges\n this particular database is usfull to represent wells.\n\n\nThe \nRINGMesh::GeoModelMeshFacets\n \n\n\nThe \nRINGMesh::GeoModelMeshCells\n gives a global access to any cell and its adjacent cells. At the mesh\ninterfaces cells can be either connected or disconnected. Several disconnection mode are available according\nto geologic feature.\n\n\nNo Duplication\n\n\nDuplication along faults only\n\n\nDuplication along horizons only\n\n\nDuplication along faults and horizons", 
            "title": "GeoModel"
        }, 
        {
            "location": "/features/geomodel/#geomodel-mutable-object-composition-to-represent-geological-model", 
            "text": "The key feature of RINGMesh is the  RINGMesh::GeoModel . It aims at representing a geological model \nwith a level of complexity adapted to the prolem to solve. Geological objects are complex and \nmultiscale.   The first way to represent and discretize a high level of detail is to use a mesh composition \nof Entities called  RINGMesh::GeoModelEntities . In this cas, the  RINGMesh::GeoModel  defines the\nboundary representation of major geological objects holding the discretization and connectivity \nbetween Entities.  The second way to deal with the geological model is to consisder the global geometry through a \nsingle mesh. The  RINGMesh::GeoModel  have tha ability to build a  RINGMesh::GeoModelMesh  on the fly.\nIn this object, every nodes, edges, polygones and cells can be assessed though \na global index. It also enable a duplication of nodes along surfaces. This is usefull\nto feed some physical simulator and export several data structure format.", 
            "title": "GeoModel: Mutable object composition to represent Geological Model"
        }, 
        {
            "location": "/features/geomodel/#geomodel-constitutive-elements-geomodelentity", 
            "text": "A model is defined by its constitutive elements  RINGMesh::GeoModelEntity . \nThere is two main king of entities:   Geometrical entities that define the geometry of the model throught several dimensions:  Regions   Surfaces  Lines  Corners    Geological entities that group several geometrical entities according to their geological meaning:  Layers   Interfaces  Contacts      We know that this is not an exhautive list. A lot of entities would be valuable to complete the model. \nWe strongly encourage people to contribute and complete these lists :)", 
            "title": "GeoModel Constitutive Elements: GeoModelEntity"
        }, 
        {
            "location": "/features/geomodel/#geomodel-geometrical-entities-geomodelmeshentity", 
            "text": "A set of  RINGMesh::GeoModelMeshEntity  hold the discretization and the boundary representation of the \ngeological model. Each mesh entity knows all connected higher and lower dimension mesh entities. Even if\nthe topology between Entities is known, each  RINGMesh::GeoModelMeshEntity  store its own mesh data \nstructure independently from one to another and you can't get any global information. Geometrical \ninformation is contained by an abstract mesh class implemented in RINGMesh. This abstraction level is \na strength of RINGMesh because it can be adapted to any data structure and ease the coupling between \nsoftware ( more details about meshes ).   A  RINGMesh::Region  is a volume defined by a set of  RingMesh::Surface  creating a closed \"box\". \nEvery surfaces that bound a region can be accessed by its index. A region can be meshed with cells.  A  RINGMesh::Surface  is defined by a set of  RINGMesh::Line  creating a closed curve. It defines \none border of a  RINGMesh::Region . Neighboring lines and surfaces can be accessed by their indices.  A  RINGMesh::Line  is defined by two  RINGMesh::corner . Connected corner and surfaces can be \naccessed by their indices.  A  RINGMesh::Corner  is a single node that bound  RingMesh::Line . Connected lines can be \naccessed by their indices.", 
            "title": "GeoModel Geometrical Entities: GeoModelMeshEntity"
        }, 
        {
            "location": "/features/geomodel/#geomodel-geological-entities-geomodelgeologicalentity", 
            "text": "A  RINGMesh::GeoModelGeologicalEntity  store a geological based topological structure. It use a kind\nof parent/child implementation where  RINGMesh::GeoModelGeologicalEntity  is the parent of its children RINGMesh::GeoModelMeshEntity . The main idea is to cluster several geometrical entity that composed a \ngeological object.   RINGMesh::Layer  is composed by several RINGMesh::Region. A layer is the parent of several children \n regions. It represents a geological layer.  RINGMesh::Interface  is composed by several RINGMesh::Surface. An interface is tha parent of several\n children surfaces. It represents a geological objects such as faults or horizons.  A  RINGMesh::Contact  (parent) is composed by several RINGMesh::Line (children). It corresponds to the\n intersections between two  RINGMesh::Interface .", 
            "title": "GeoModel Geological Entities: GeoModelGeologicalEntity"
        }, 
        {
            "location": "/features/geomodel/#geomodel-global-representation-geomodelmesh", 
            "text": "The GeoModelMesh is one mesh built by copying and merging all  RINGMesh::GeoModelMeshEntity  of the GeoModel \nin a global and unique mesh. It allows to access to (1) a more general information than the one stores inside \nmesh of  RINGMesh::GeoModelEntity , and (2) a single mesh representing the entire geological model.  To ease the global access to vertices, edges, facets and cells without redundancy at GeoModel geometrical\nentity borders; four databases are available. These databases are empty by default and are automatically \nfilled as soon as they are used.   The  RINGMesh::GeoModelMeshVertices    The  RINGMesh::GeoModelMeshEdges  this particular database is usfull to represent wells.  The  RINGMesh::GeoModelMeshFacets    The  RINGMesh::GeoModelMeshCells  gives a global access to any cell and its adjacent cells. At the mesh\ninterfaces cells can be either connected or disconnected. Several disconnection mode are available according\nto geologic feature.  No Duplication  Duplication along faults only  Duplication along horizons only  Duplication along faults and horizons", 
            "title": "GeoModel Global Representation: GeoModelMesh"
        }, 
        {
            "location": "/features/mesh/", 
            "text": "Under construction", 
            "title": "Mesh"
        }, 
        {
            "location": "/features/mesh/#under-construction", 
            "text": "", 
            "title": "Under construction"
        }, 
        {
            "location": "/features/file_formats/", 
            "text": "Under construction", 
            "title": "Supported file formats"
        }, 
        {
            "location": "/features/file_formats/#under-construction", 
            "text": "", 
            "title": "Under construction"
        }, 
        {
            "location": "/features/viewer/", 
            "text": "Under construction", 
            "title": "Viewer"
        }, 
        {
            "location": "/features/viewer/#under-construction", 
            "text": "", 
            "title": "Under construction"
        }, 
        {
            "location": "/gallery/", 
            "text": "Under construction", 
            "title": "Gallery"
        }, 
        {
            "location": "/gallery/#under-construction", 
            "text": "", 
            "title": "Under construction"
        }, 
        {
            "location": "/download/", 
            "text": "Under construction", 
            "title": "Download"
        }, 
        {
            "location": "/download/#under-construction", 
            "text": "", 
            "title": "Under construction"
        }, 
        {
            "location": "/about/", 
            "text": "About RINGMesh\n\n\nDevelopers\n\n\nCurrent Developers\n\n\n\n\nPierre Anquez\n\n\nFran\u00e7ois Bonneau\n\n\nArnaud Botella\n\n\nBenjamin Chauvin\n\n\nAntoine Mazuyer\n\n\nMargaux Raguenel\n\n\n\n\nOther contributors\n\n\n\n\nJeanne Pellerin\n\n  was part of the project between 2014 - 2016 when she was at Weierstrass Institute - Total.\n\n\n\n\nPublications\n\n\n2017\n\n\nPellerin et al., \nRINGMesh: A programming library for developing mesh-based geomodeling applications.\n,\n\nComputers \n Geosciences, 104\n pp.93-100.\n\n\nChauvin et al., \nDefining Proper Boundary Conditions in 3-D Structural Restoration: A Case Study Restoring a 3-D Forward Model of Suprasalt Extensional Structures\n,\n\nAAPG Bulletin\n\n\nLicence\n\n\nRINGMesh is licensed under the 3-clauses BSD License (also called \"Revised BSD License\",\n\"New BSD License\", or \"Modified BSD License\")\n\n\nCopyright (c) 2012-2017, Association Scientifique pour la Geologie et ses\nApplications (ASGA). All rights reserved.\n\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n * Redistributions of source code must retain the above copyright\n  notice, this list of conditions and the following disclaimer.\n * Redistributions in binary form must reproduce the above copyright\n  notice, this list of conditions and the following disclaimer in the\n  documentation and/or other materials provided with the distribution.\n * Neither the name of ASGA nor the\n  names of its contributors may be used to endorse or promote products\n  derived from this software without specific prior written permission.\n\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE ARE DISCLAIMED. IN NO EVENT SHALL ASGA BE LIABLE FOR ANY DIRECT,\nINDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\nTHIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\nhttp://www.ring-team.org\n\nRING Project\n\nEcole Nationale Superieure de Geologie - GeoRessources\n\n2 Rue du Doyen Marcel Roubault - TSA 70605\n\n54518 VANDOEUVRE-LES-NANCY\n\nFRANCE  \n\n\nHow to cite RINGMesh\n\n\n@article{Pellerin2017,\n      title={RINGMesh: A programming library for developing mesh-based geomodeling applications},\n      author={Pellerin, Jeanne and Botella, Arnaud and Bonneau, Fran{\\c{c}}ois and\n              Mazuyer, Antoine and Chauvin, Benjamin and L{\\'e}vy, Bruno and Caumon, Guillaume},\n      journal={Computers \\\n Geosciences},\n      volume={104},\n      pages={93--100},\n      year={2017},\n      publisher={Elsevier},\n      url={https://ringmesh.ring-team.org}\n        }\n\n\n\n\nAbout the website\n\n\nThis website has been built using \nMkDocs\n and a modified\n\nBootswatch\n theme of the \nBootstrap\n framework.", 
            "title": "About"
        }, 
        {
            "location": "/about/#about-ringmesh", 
            "text": "", 
            "title": "About RINGMesh"
        }, 
        {
            "location": "/about/#developers", 
            "text": "", 
            "title": "Developers"
        }, 
        {
            "location": "/about/#current-developers", 
            "text": "Pierre Anquez  Fran\u00e7ois Bonneau  Arnaud Botella  Benjamin Chauvin  Antoine Mazuyer  Margaux Raguenel", 
            "title": "Current Developers"
        }, 
        {
            "location": "/about/#other-contributors", 
            "text": "Jeanne Pellerin \n  was part of the project between 2014 - 2016 when she was at Weierstrass Institute - Total.", 
            "title": "Other contributors"
        }, 
        {
            "location": "/about/#publications", 
            "text": "", 
            "title": "Publications"
        }, 
        {
            "location": "/about/#2017", 
            "text": "Pellerin et al.,  RINGMesh: A programming library for developing mesh-based geomodeling applications. , Computers   Geosciences, 104  pp.93-100.  Chauvin et al.,  Defining Proper Boundary Conditions in 3-D Structural Restoration: A Case Study Restoring a 3-D Forward Model of Suprasalt Extensional Structures , AAPG Bulletin", 
            "title": "2017"
        }, 
        {
            "location": "/about/#licence", 
            "text": "RINGMesh is licensed under the 3-clauses BSD License (also called \"Revised BSD License\",\n\"New BSD License\", or \"Modified BSD License\")  Copyright (c) 2012-2017, Association Scientifique pour la Geologie et ses\nApplications (ASGA). All rights reserved.  Redistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n * Redistributions of source code must retain the above copyright\n  notice, this list of conditions and the following disclaimer.\n * Redistributions in binary form must reproduce the above copyright\n  notice, this list of conditions and the following disclaimer in the\n  documentation and/or other materials provided with the distribution.\n * Neither the name of ASGA nor the\n  names of its contributors may be used to endorse or promote products\n  derived from this software without specific prior written permission.  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE ARE DISCLAIMED. IN NO EVENT SHALL ASGA BE LIABLE FOR ANY DIRECT,\nINDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\nTHIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  http://www.ring-team.org \nRING Project \nEcole Nationale Superieure de Geologie - GeoRessources \n2 Rue du Doyen Marcel Roubault - TSA 70605 \n54518 VANDOEUVRE-LES-NANCY \nFRANCE", 
            "title": "Licence"
        }, 
        {
            "location": "/about/#how-to-cite-ringmesh", 
            "text": "@article{Pellerin2017,\n      title={RINGMesh: A programming library for developing mesh-based geomodeling applications},\n      author={Pellerin, Jeanne and Botella, Arnaud and Bonneau, Fran{\\c{c}}ois and\n              Mazuyer, Antoine and Chauvin, Benjamin and L{\\'e}vy, Bruno and Caumon, Guillaume},\n      journal={Computers \\  Geosciences},\n      volume={104},\n      pages={93--100},\n      year={2017},\n      publisher={Elsevier},\n      url={https://ringmesh.ring-team.org}\n        }", 
            "title": "How to cite RINGMesh"
        }, 
        {
            "location": "/about/#about-the-website", 
            "text": "This website has been built using  MkDocs  and a modified Bootswatch  theme of the  Bootstrap  framework.", 
            "title": "About the website"
        }
    ]
}